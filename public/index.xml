<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paul O&#39;Day</title>
    <link>https://pauloday.com/</link>
    <description>Recent content on Paul O&#39;Day</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 11 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://pauloday.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Profiling Clojure and Rust</title>
      <link>https://pauloday.com/posts/profiling/</link>
      <pubDate>Tue, 11 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://pauloday.com/posts/profiling/</guid>
      <description>&lt;h1 id=&#34;profiling-clojure-and-rust-quasicrystals&#34;&gt;Profiling Clojure and Rust Quasicrystals&lt;/h1&gt;&#xA;&lt;p&gt;I rewrote my Clojure implementation of my quasicrystal image generator to Rust for performance reasons. Before doing this I did try a couple of things to improve the Clojure performance, but after looking at a profile of the Clojure code, it became obvious that my fixes weren&amp;rsquo;t addressing the core issue. I then decided to move to Rust because Rust seemed like a better tool for the job, and I wanted to learn more about it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Psychedelic Quasicrystals in Rust</title>
      <link>https://pauloday.com/posts/rustquasi/</link>
      <pubDate>Thu, 02 Jan 2025 00:00:00 +0000</pubDate>
      <guid>https://pauloday.com/posts/rustquasi/</guid>
      <description>&lt;h1 id=&#34;rust-quasicrystals&#34;&gt;Rust quasicrystals&lt;/h1&gt;&#xA;&lt;p&gt;This is part 2 of &lt;a href=&#34;&#34;&gt;this&lt;/a&gt; article, where I go over the multithreaded Rust implementation. Part 1 goes more in depth on the math, so if you want to understand this program on a more abstract level that&amp;rsquo;s where to look.&lt;/p&gt;&#xA;&lt;p&gt;The Rust version has more features than the Clojure version. You can adjust the zoom level as well offset the viewport. You can also adjust the angles of each layer independently, or make the angles of the layers change over the course of the animation, and you can adjust the speed of the animation. It&amp;rsquo;s also more documented and has a better architecture, so it should be easier to extend. We&amp;rsquo;ll go over it file by file, but I won&amp;rsquo;t look at every single function, just the interesting ones.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Clojure Quasicrystals</title>
      <link>https://pauloday.com/posts/clojurequasi/</link>
      <pubDate>Mon, 28 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://pauloday.com/posts/clojurequasi/</guid>
      <description>&lt;p&gt;Years ago I read an &lt;a href=&#34;http://mainisusuallyafunction.blogspot.com/2011/10/quasicrystals-as-sums-of-waves-in-plane.html&#34;&gt;article&lt;/a&gt; about how to generate a neat animation of a quasicrystal. A quasicrystal is an ordered structure that is not periodic. Because it&amp;rsquo;s ordered it can fill an infinite sized space, but since it&amp;rsquo;s not periodic it doesn&amp;rsquo;t have symmetry. The classic example of this is Penrose tiles, you can use them to fill any sized space by matching the colors of the tiles, but it doesn&amp;rsquo;t create a symmetrical repeating pattern. The animation mentioned in that article is composed of overlapping sine waves rotated at different angles.&lt;/p&gt;</description>
    </item>
    <item>
      <title>About</title>
      <link>https://pauloday.com/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://pauloday.com/about/</guid>
      <description>&lt;p&gt;I’m a full-stack developer with a passion for learning and building things. My coding journey began around age 11 when I started writing games in QuickBasic. This ignited my passion for learning about programming as I started a tour through various other languages and paradigms, eventually ending with Javascript as my main language - although I’m always eager to learn new things, especially when it’s about the best tool for the job. Currently I&amp;rsquo;m working on Rust projects and switching my career track to using Rust as my main language.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
